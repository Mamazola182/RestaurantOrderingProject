@model IEnumerable<RestaurantOrderingProject.Models.Category>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <title>Quản Lý Danh Mục</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            background-size: 400% 400%;
            animation: gradientFlow 15s ease infinite;
            min-height: 100vh;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }

        @@keyframes gradientFlow {
            0%

        {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }

        }

        /* Floating particles */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 6px;
            height: 6px;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            animation: particleFloat 20s infinite linear;
        }

            .particle:nth-child(1) {
                left: 10%;
                animation-delay: 0s;
            }

            .particle:nth-child(2) {
                left: 20%;
                animation-delay: 2s;
            }

            .particle:nth-child(3) {
                left: 30%;
                animation-delay: 4s;
            }

            .particle:nth-child(4) {
                left: 40%;
                animation-delay: 6s;
            }

            .particle:nth-child(5) {
                left: 50%;
                animation-delay: 8s;
            }

            .particle:nth-child(6) {
                left: 60%;
                animation-delay: 10s;
            }

            .particle:nth-child(7) {
                left: 70%;
                animation-delay: 12s;
            }

            .particle:nth-child(8) {
                left: 80%;
                animation-delay: 14s;
            }

            .particle:nth-child(9) {
                left: 90%;
                animation-delay: 16s;
            }

        @@keyframes particleFloat {
            0%

        {
            transform: translateY(100vh) rotate(0deg);
            opacity: 0;
        }

        10% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            transform: translateY(-100px) rotate(360deg);
            opacity: 0;
        }

        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 10;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            animation: slideInDown 0.8s ease-out;
        }

        h2 {
            color: white;
            font-size: 3rem;
            font-weight: 700;
            text-shadow: 2px 2px 20px rgba(0, 0, 0, 0.3);
            margin-bottom: 20px;
            position: relative;
            animation: textGlow 3s ease-in-out infinite alternate;
        }

        @@keyframes slideInDown {
            from

        {
            opacity: 0;
            transform: translateY(-50px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@keyframes textGlow {
            from

        {
            text-shadow: 2px 2px 20px rgba(0, 0, 0, 0.3);
        }

        to {
            text-shadow: 2px 2px 30px rgba(255, 255, 255, 0.5);
        }

        }

        .add-btn-container {
            text-align: center;
            margin-bottom: 30px;
            animation: slideInUp 0.8s ease-out 0.3s both;
        }

        .status {
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 6px;
        }

            .status.available {
                color: green;
            }

            .status.unavailable {
                color: red;
            }


        .add-btn {
            display: inline-block;
            background: linear-gradient(135deg, #56CCF2 0%, #2F80ED 100%);
            color: white;
            padding: 18px 35px;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 600;
            font-size: 1.1rem;
            box-shadow: 0 15px 35px rgba(46, 128, 237, 0.3);
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

            .add-btn::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                transition: all 0.6s ease;
                transform: translate(-50%, -50%);
            }

            .add-btn:hover {
                transform: translateY(-5px) scale(1.05);
                box-shadow: 0 20px 45px rgba(46, 128, 237, 0.4);
            }

                .add-btn:hover::before {
                    width: 300px;
                    height: 300px;
                }

            .add-btn::after {
                content: '✨';
                margin-left: 10px;
                animation: sparkle 1.5s ease-in-out infinite;
            }

        @@keyframes sparkle {
            0%, 100%

        {
            transform: scale(1) rotate(0deg);
        }

        50% {
            transform: scale(1.2) rotate(180deg);
        }

        }

        @@keyframes slideInUp {
            from

        {
            opacity: 0;
            transform: translateY(50px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .table-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            padding: 40px;
            box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.6);
            animation: slideInUp 0.8s ease-out 0.5s both;
            position: relative;
            overflow: hidden;
        }

            .table-container::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
                animation: shimmer 4s infinite;
            }

        @@keyframes shimmer {
            0%

        {
            left: -100%;
        }

        100% {
            left: 100%;
        }

        }

        table {
            width: 100%;
            border-collapse: collapse;
            position: relative;
            z-index: 2;
        }

        thead {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        th {
            padding: 20px 25px;
            text-align: left;
            font-weight: 600;
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            border: none;
        }

            th:first-child {
                border-top-left-radius: 15px;
                border-bottom-left-radius: 15px;
            }

            th:last-child {
                border-top-right-radius: 15px;
                border-bottom-right-radius: 15px;
            }

            th::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 30px;
                height: 2px;
                background: rgba(255, 255, 255, 0.5);
                border-radius: 1px;
            }

        tbody tr {
            transition: all 0.3s ease;
            animation: fadeInRow 0.6s ease-out both;
            position: relative;
        }

            tbody tr:nth-child(1) {
                animation-delay: 0.7s;
            }

            tbody tr:nth-child(2) {
                animation-delay: 0.8s;
            }

            tbody tr:nth-child(3) {
                animation-delay: 0.9s;
            }

            tbody tr:nth-child(4) {
                animation-delay: 1.0s;
            }

            tbody tr:nth-child(5) {
                animation-delay: 1.1s;
            }

        @@keyframes fadeInRow {
            from

        {
            opacity: 0;
            transform: translateX(-30px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }

        }

        tbody tr:hover {
            background: linear-gradient(135deg, #f8f9ff 0%, #e8efff 100%);
            transform: scale(1.02);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        tbody tr::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            width: 0;
            height: 100%;
            background: linear-gradient(90deg, #667eea, #764ba2);
            transition: width 0.3s ease;
            z-index: -1;
        }

        tbody tr:hover::before {
            width: 4px;
        }

        td {
            padding: 20px 25px;
            border-bottom: 1px solid #eee;
            font-size: 1rem;
            position: relative;
        }

        tbody tr:last-child td {
            border-bottom: none;
        }

        .category-name {
            font-weight: 600;
            color: #333;
            position: relative;
        }

            .category-name::before {
                content: '📁';
                margin-right: 10px;
                font-size: 1.2rem;
                animation: bounce 2s infinite;
            }

        @@keyframes bounce {
            0%, 20%, 50%, 80%, 100%

        {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-3px);
        }

        60% {
            transform: translateY(-1px);
        }

        }

        .action-buttons {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .btn {
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 25px;
            font-weight: 500;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .btn::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                border-radius: 50%;
                transition: all 0.4s ease;
                transform: translate(-50%, -50%);
            }

            .btn:hover::before {
                width: 300px;
                height: 300px;
            }

        .edit-btn {
            background: linear-gradient(135deg, #56CCF2 0%, #2F80ED 100%);
            color: white;
            box-shadow: 0 8px 20px rgba(46, 128, 237, 0.3);
        }

            .edit-btn::before {
                background: rgba(255, 255, 255, 0.2);
            }

            .edit-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 25px rgba(46, 128, 237, 0.4);
            }

        .delete-btn {
            background: linear-gradient(135deg, #FF6B6B 0%, #EE5A24 100%);
            color: white;
            box-shadow: 0 8px 20px rgba(238, 90, 36, 0.3);
        }

            .delete-btn::before {
                background: rgba(255, 255, 255, 0.2);
            }

            .delete-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 12px 25px rgba(238, 90, 36, 0.4);
            }

        .btn-separator {
            color: #ccc;
            font-weight: bold;
            margin: 0 5px;
            animation: pulse 2s infinite;
        }

        @@keyframes pulse {
            0%, 100%

        {
            opacity: 0.5;
        }

        50% {
            opacity: 1;
        }

        }

        /* Empty state */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

            .empty-state::before {
                content: '📂';
                font-size: 4rem;
                display: block;
                margin-bottom: 20px;
                animation: sway 3s ease-in-out infinite;
            }

        @@keyframes sway {
            0%, 100%

        {
            transform: rotate(-5deg);
        }

        50% {
            transform: rotate(5deg);
        }

        }

        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            color: #999;
        }

        .empty-state p {
            font-size: 1rem;
            color: #bbb;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            body

        {
            padding: 10px;
        }

        h2 {
            font-size: 2rem;
        }

        .table-container {
            padding: 20px;
            overflow-x: auto;
        }

        table {
            min-width: 500px;
        }

        th, td {
            padding: 15px 10px;
            font-size: 0.9rem;
        }

        .action-buttons {
            flex-direction: column;
            gap: 5px;
        }

        .btn {
            padding: 8px 15px;
            font-size: 0.8rem;
        }

        }

        /* Loading animation for new rows */
        .row-loading {
            opacity: 0;
            animation: loadRow 0.5s ease-out 0.2s forwards;
        }

        @@keyframes loadRow {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }
    </style>
</head>
<body>
    <div class="particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <div class="container">
        <div class="header">
            <h2>🏷️ Quản Lý Danh Mục</h2>
        </div>

        <div class="add-btn-container">
            <a href="@Url.Action("Create")" class="add-btn">
                📁 Thêm Danh Mục Mới
            </a>
        </div>

        <div class="table-container">
            @if (Model != null && Model.Any())
            {
                <table>
                    <thead>
                        <tr>
                            <th>📋 Tên Danh Mục</th>
                            <th>⚡ Hành Động</th>
                            <th>⚡Trạng thái</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <span class="category-name">@item.Name</span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Edit", new { id = item.Id })" class="btn edit-btn">
                                            ✏️ Sửa
                                        </a>
                                        <span class="btn-separator">|</span>
                                        <a href="@Url.Action("Delete", new { id = item.Id })" class="btn delete-btn">
                                            🗑️ Đổi trạng thái
                                        </a>
                                    </div>
                                </td>
                                <td>
                                    @if (item.IsAvailable)
                                    {
                                        <span class="status available">🟢 Đang hoạt động</span>
                                    }
                                    else
                                    {
                                        <span class="status unavailable">🔴 Không hoạt động</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="empty-state">
                    <h3>Chưa có danh mục nào</h3>
                    <p>Hãy thêm danh mục đầu tiên của bạn!</p>
                </div>
            }
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add hover sound effect (visual feedback)
            const buttons = document.querySelectorAll('.btn, .add-btn');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-3px) scale(1.05)';
                });

                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });

            // Add click ripple effect
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    const ripple = document.createElement('span');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;

                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        background: rgba(255, 255, 255, 0.5);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s ease-out;
                        pointer-events: none;
                    `;

                    this.appendChild(ripple);

                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });

            // Add delete confirmation with animation
            const deleteButtons = document.querySelectorAll('.delete-btn');
            deleteButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const categoryName = this.closest('tr').querySelector('.category-name').textContent;

                    if (confirm(`Bạn có chắc chắn muốn xóa danh mục "${categoryName}" không?`)) {
                        // Add loading animation
                        this.innerHTML = '⏳ Đang xóa...';
                        this.style.pointerEvents = 'none';

                        // Simulate loading then redirect
                        setTimeout(() => {
                            window.location.href = this.href;
                        }, 800);
                    }
                });
            });

            // Add CSS for ripple animation
            const style = document.createElement('style');
            style.textContent = `
                @@keyframes ripple {
                    to {
                        transform: scale(2);
                        opacity: 0;
                    }
                }
            `;
            document.head.appendChild(style);
        });
    </script>
</body>
</html>