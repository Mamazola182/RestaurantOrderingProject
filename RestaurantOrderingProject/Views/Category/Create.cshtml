@model RestaurantOrderingProject.Models.Category
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <title>Thêm Danh Mục</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            overflow: hidden;
        }

        @@keyframes gradientShift {
            0%

        {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }

        }

        /* Floating shapes background */
        .bg-shapes {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .shape {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            animation: float 20s infinite linear;
        }

            .shape:nth-child(1) {
                width: 80px;
                height: 80px;
                top: 20%;
                left: 10%;
                animation-delay: 0s;
            }

            .shape:nth-child(2) {
                width: 120px;
                height: 120px;
                top: 60%;
                right: 10%;
                animation-delay: 5s;
            }

            .shape:nth-child(3) {
                width: 60px;
                height: 60px;
                bottom: 20%;
                left: 20%;
                animation-delay: 10s;
            }

            .shape:nth-child(4) {
                width: 100px;
                height: 100px;
                top: 10%;
                right: 30%;
                animation-delay: 15s;
            }

        @@keyframes float {
            0%, 100%

        {
            transform: translateY(0) rotate(0deg);
            opacity: 0.3;
        }

        50% {
            transform: translateY(-30px) rotate(180deg);
            opacity: 0.8;
        }

        }

        .form-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 25px;
            padding: 50px 40px;
            box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1), inset 0 1px 0 rgba(255, 255, 255, 0.6);
            max-width: 500px;
            width: 100%;
            position: relative;
            z-index: 10;
            animation: slideInUp 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            overflow: hidden;
        }

        @@keyframes slideInUp {
            from

        {
            opacity: 0;
            transform: translateY(60px) scale(0.9);
        }

        to {
            opacity: 1;
            transform: translateY(0) scale(1);
        }

        }

        .form-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
            animation: shimmer 3s infinite;
        }

        @@keyframes shimmer {
            0%

        {
            left: -100%;
        }

        100% {
            left: 100%;
        }

        }

        h2 {
            text-align: center;
            color: #333;
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 30px;
            position: relative;
            animation: textGlow 2s ease-in-out infinite alternate;
        }

        @@keyframes textGlow {
            from

        {
            text-shadow: 0 0 10px rgba(102, 126, 234, 0.3);
        }

        to {
            text-shadow: 0 0 20px rgba(102, 126, 234, 0.6);
        }

        }

        h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 2px;
            animation: expandLine 1s ease-out 0.5s both;
        }

        @@keyframes expandLine {
            from

        {
            width: 0;
        }

        to {
            width: 80px;
        }

        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        label {
            display: block;
            font-weight: 600;
            color: #555;
            margin-bottom: 8px;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            position: relative;
        }

            label::before {
                content: '✨';
                margin-right: 8px;
                opacity: 0;
                transform: scale(0);
                transition: all 0.3s ease;
            }

        .form-group:focus-within label::before {
            opacity: 1;
            transform: scale(1);
        }

        .form-group:focus-within label {
            color: #667eea;
            transform: translateX(5px);
        }

        input[type="text"] {
            width: 100%;
            padding: 18px 20px;
            border: 2px solid #e1e5e9;
            border-radius: 15px;
            font-size: 1.1rem;
            background: rgba(255, 255, 255, 0.9);
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            position: relative;
            outline: none;
        }

            input[type="text"]:focus {
                border-color: #667eea;
                box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1), 0 10px 25px rgba(0, 0, 0, 0.1);
                transform: translateY(-2px);
                background: white;
            }

            input[type="text"]:hover {
                border-color: #b8c5ff;
                transform: translateY(-1px);
            }

            /* Animated input placeholder */
            input[type="text"]::placeholder {
                color: #aaa;
                transition: all 0.3s ease;
            }

            input[type="text"]:focus::placeholder {
                opacity: 0;
                transform: translateX(10px);
            }

        .validation-error {
            color: #e74c3c;
            font-size: 0.9rem;
            margin-top: 5px;
            display: block;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            position: relative;
        }

            .validation-error:not(:empty) {
                opacity: 1;
                transform: translateY(0);
                animation: shake 0.5s ease-in-out;
            }

        @@keyframes shake {
            0%, 100%

        {
            transform: translateX(0);
        }

        25% {
            transform: translateX(-5px);
        }

        75% {
            transform: translateX(5px);
        }

        }

        .validation-error::before {
            content: '⚠️';
            margin-right: 5px;
        }

        .submit-btn {
            width: 100%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 18px 30px;
            font-size: 1.2rem;
            font-weight: 600;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
            position: relative;
            overflow: hidden;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

            .submit-btn::before {
                content: '';
                position: absolute;
                top: 50%;
                left: 50%;
                width: 0;
                height: 0;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                transition: all 0.6s ease;
                transform: translate(-50%, -50%);
            }

            .submit-btn:hover {
                transform: translateY(-3px) scale(1.02);
                box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
            }

                .submit-btn:hover::before {
                    width: 300px;
                    height: 300px;
                }

            .submit-btn:active {
                transform: translateY(-1px) scale(0.98);
                transition: all 0.1s ease;
            }

            /* Loading animation */
            .submit-btn.loading {
                pointer-events: none;
                opacity: 0.8;
            }

                .submit-btn.loading::after {
                    content: '';
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    width: 20px;
                    height: 20px;
                    margin: -10px 0 0 -10px;
                    border: 2px solid transparent;
                    border-top: 2px solid white;
                    border-radius: 50%;
                    animation: spin 1s linear infinite;
                }

        @@keyframes spin {
            0%

        {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }

        }

        /* Success feedback */
        .form-container.success {
            animation: successPulse 0.6s ease-out;
        }

        @@keyframes successPulse {
            0%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        100% {
            transform: scale(1);
        }

        }

        /* Responsive */
        @@media (max-width: 768px) {
            .form-container

        {
            padding: 30px 25px;
            margin: 10px;
        }

        h2 {
            font-size: 1.8rem;
        }

        input[type="text"],
        .submit-btn {
            padding: 15px 18px;
            font-size: 1rem;
        }

        }

        /* Icon animations */
        .icon-animation {
            display: inline-block;
            animation: bounce 2s infinite;
        }

        @@keyframes bounce {
            0%, 20%, 50%, 80%, 100%

        {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-10px);
        }

        60% {
            transform: translateY(-5px);
        }

        }
    </style>
</head>
<body>
    <div class="bg-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <div class="form-container">
        <h2><span class="icon-animation">📁</span> Thêm Danh Mục</h2>

        <form asp-action="Create" id="categoryForm">
            <div class="form-group">
                <label asp-for="Name">
                    <span class="icon-animation">🏷️</span> Tên Danh Mục:
                </label>
                <input asp-for="Name" type="text" placeholder="Nhập tên danh mục..." />
                <span asp-validation-for="Name" class="validation-error"></span>
            </div>

            <button type="submit" class="submit-btn">
                <span>✨ Thêm Danh Mục</span>
            </button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('categoryForm');
            const submitBtn = form.querySelector('.submit-btn');
            const input = form.querySelector('input[type="text"]');
            const container = document.querySelector('.form-container');

            // Input focus effects
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });

            input.addEventListener('blur', function() {
                this.parentElement.classList.remove('focused');
            });

            // Form submission animation
            form.addEventListener('submit', function(e) {
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<span>Đang xử lý...</span>';

                // Simulate loading (remove this in production)
                setTimeout(() => {
                    container.classList.add('success');
                }, 1000);
            });

            // Input validation animation
            input.addEventListener('input', function() {
                const validationSpan = this.parentElement.querySelector('.validation-error');
                if (this.value.trim() && validationSpan.textContent) {
                    validationSpan.style.opacity = '0';
                    validationSpan.style.transform = 'translateY(-10px)';
                }
            });

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                if (e.ctrlKey && e.key === 'Enter') {
                    form.submit();
                }
            });

            // Auto-focus input
            setTimeout(() => {
                input.focus();
            }, 500);
        });
    </script>
</body>
</html>