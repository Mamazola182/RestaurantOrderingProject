@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model RestaurantOrderingProject.Models.Food

@{
    ViewData["Title"] = "Delete Food";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Delete Food</h1>

<div class="alert alert-warning">
    <h4><i class="fas fa-exclamation-triangle"></i> Confirm Deletion</h4>
    <p>Are you sure you want to delete this food item? This action cannot be undone.</p>
</div>

<div class="row">
    <div class="col-md-6">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="text-center mb-4">
                <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded shadow" style="max-height: 250px;" />
            </div>
        }
    </div>

    <div class="col-md-6">
        <div class="card border-danger">
            <div class="card-header bg-danger text-white">
                <h4 class="card-title mb-0">@Html.DisplayFor(model => model.Name)</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FoodId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.FoodId)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Description)</dt>
                    <dd class="col-sm-8">
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            @Html.DisplayFor(model => model.Description)
                        }
                        else
                        {
                            <span class="text-muted">No description</span>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Price)</dt>
                    <dd class="col-sm-8">
                        <span class="text-success fw-bold">@Model.Price.ToString("C0")</span>
                    </dd>

                    <dt class="col-sm-4">Category</dt>
                    <dd class="col-sm-8">
                        @if (Model.Category != null)
                        {
                            @Html.DisplayFor(model => model.Category.CategoryName)
                        }
                        else
                        {
                            <span class="text-muted">No category</span>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.IsAvailable)</dt>
                    <dd class="col-sm-8">
                        @if (Model.IsAvailable == true)
                        {
                            <span class="badge bg-success">Available</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Unavailable</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <form asp-action="Delete">
            <input type="hidden" asp-for="FoodId" />
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Yes, Delete This Food
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Cancel
                </a>
            </div>
        </form>
    </div>
</div>

<div class="mt-3">
    <div class="alert alert-info">
        <small>
            <strong>Note:</strong> Deleting this food will also affect any related orders or cart items that reference this food.
        </small>
    </div>
</div>