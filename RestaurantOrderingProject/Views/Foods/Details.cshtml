@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model RestaurantOrderingProject.Models.Food

@{
    ViewData["Title"] = "Food Details";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Food Details</h1>

<div class="row">
    <div class="col-md-6">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <div class="text-center mb-4">
                <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded shadow" style="max-height: 300px;" />
            </div>
        }
    </div>

    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title mb-0">@Html.DisplayFor(model => model.Name)</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.FoodId)</dt>
                    <dd class="col-sm-8">@Html.DisplayFor(model => model.FoodId)</dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Description)</dt>
                    <dd class="col-sm-8">
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            @Html.DisplayFor(model => model.Description)
                        }
                        else
                        {
                            <span class="text-muted">No description available</span>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.Price)</dt>
                    <dd class="col-sm-8">
                        <span class="text-success fw-bold h5">@Model.Price.ToString("C0")</span>
                    </dd>

                    <dt class="col-sm-4">Category</dt>
                    <dd class="col-sm-8">
                        @if (Model.Category != null)
                        {
                            <span class="badge bg-info">@Html.DisplayFor(model => model.Category.CategoryName)</span>
                        }
                        else
                        {
                            <span class="text-muted">No category assigned</span>
                        }
                    </dd>

                    <dt class="col-sm-4">@Html.DisplayNameFor(model => model.IsAvailable)</dt>
                    <dd class="col-sm-8">
                        @if (Model.IsAvailable == true)
                        {
                            <span class="badge bg-success">Available</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Unavailable</span>
                        }
                    </dd>

                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <dt class="col-sm-4">Image URL</dt>
                        <dd class="col-sm-8">
                            <small class="text-muted">@Model.ImageUrl</small>
                        </dd>
                    }
                </dl>
            </div>
        </div>

        <div class="mt-3">
            <div class="btn-group" role="group">
                <a asp-action="Edit" asp-route-id="@Model.FoodId" class="btn btn-primary">Edit</a>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <a asp-action="Delete" asp-route-id="@Model.FoodId" class="btn btn-danger">Delete</a>
            </div>
        </div>
    </div>
</div>

@if (Model.Category != null)
{
    <div class="row mt-4">
        <div class="col-12">
            <div class="alert alert-info">
                <h6><i class="fas fa-info-circle"></i> Category Information</h6>
                <p class="mb-0">This food belongs to the <strong>@Model.Category.CategoryName</strong> category.</p>
            </div>
        </div>
    </div>
}