@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<RestaurantOrderingProject.Models.Food>

@{
    ViewData["Title"] = "Foods Management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Foods Management</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Food</a>
</p>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        <strong>Error:</strong> @ViewBag.Error
    </div>
}

<div class="row mb-3">
    <div class="col-md-6">
        <p>Total Foods: <strong>@ViewBag.FoodCount</strong></p>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FoodId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    Image
                </th>
                <th>
                    Category
                </th>
                <th>
                    Available
                </th>
                <th>
                    Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FoodId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @item.Price.ToString("C0")
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="@item.Name" style="width: 50px; height: 50px; object-fit: cover; border-radius: 5px;" />
                        }
                        else
                        {
                            <span class="text-muted">No image</span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </td>
                    <td>
                        @if (item.IsAvailable == true)
                        {
                            <span class="badge bg-success">Available</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">Unavailable</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.FoodId" class="btn btn-sm btn-outline-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.FoodId" class="btn btn-sm btn-outline-info">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.FoodId" class="btn btn-sm btn-outline-danger">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info text-center">
        <h4>No foods found</h4>
        <p>Click <a asp-action="Create">here</a> to create your first food item.</p>
    </div>
}
